#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/node_exporter
LOG_DIR=/var/vcap/sys/log/node_exporter
TMP_DIR=/var/vcap/sys/tmp/node_exporter
STORE_DIR=/var/vcap/store/node_exporter
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/node_exporter.pid

source /var/vcap/packages/node_exporter/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/node_exporter/bin:${PATH}

<%
    collectors = [
      "arp",
      "bcache",
      "bonding",
      "btrfs",
      "buddyinfo",
      "conntrack",
      "cpu",
      "cpufreq",
      "diskstats",
      "dmi",
      "drbd",
      "edac",
      "entropy",
      "ethtool",
      "fibrechannel",
      "filefd",
      "filesystem",
      "hwmon",
      "infiniband",
      "interrupts",
      "ipvs",
      "ksmd",
      "loadavg",
      "logind",
      "mdadm",
      "meminfo",
      "meminfo_numa",
      "mountstats",
      "netclass",
      "netdev",
      "netstat",
      "nfs",
      "nfsd",
      "ntp",
      "nvme",
      "os",
      "perf",
      "powersupplyclass",
      "pressure",
      "processes",
      "qdisc",
      "rapl",
      "runit",
      "schedstat",
      "selinux",
      "sockstat",
      "softnet",
      "stat",
      "supervisord",
      "systemd",
      "tapestats",
      "tcpstat",
      "textfile",
      "thermal_zone",
      "time",
      "timex",
      "udp_queues",
      "uname",
      "vmstat",
      "wifi",
      "xfs",
      "zfs"
    ]
%>

case $1 in
  start)
    pid_guard ${PIDFILE} "node_exporter"
    echo $$ > ${PIDFILE}

    exec node_exporter \
      <% if p('node_exporter.collector.cpu.info') %> \
      --collector.cpu.info \
      <% end %> \
      <% if_p('node_exporter.collector.diskstats.ignored_devices') do |ignored_devices| %> \
      --collector.diskstats.ignored-devices="<%= ignored_devices %>" \
      <% end %> \
      <% if_p('node_exporter.collector.filesystem.ignored_mount_points') do |ignored_mount_points| %> \
      --collector.filesystem.ignored-mount-points="<%= ignored_mount_points %>" \
      <% end %> \
      <% if_p('node_exporter.collector.filesystem.mount_points_exclude') do |mount_points_exclude| %> \
      --collector.filesystem.mount-points-exclude="<%= mount_points_exclude %>" \
      <% end %> \
      <% if_p('node_exporter.collector.filesystem.ignored_fs_types') do |ignored_fs_types| %> \
      --collector.filesystem.ignored-fs-types="<%= ignored_fs_types %>" \
      <% end %> \
      <% if_p('node_exporter.collector.filesystem.fs_types_exclude') do |fs_types_exclude| %> \
      --collector.filesystem.fs-types-exclude="<%= fs_types_exclude %>" \
      <% end %> \
      <% if_p('node_exporter.collector.netclass.ignored_devices') do |ignored_devices| %> \
      --collector.netclass.ignored-devices="<%= ignored_devices %>" \
      <% end %> \
      <% if_p('node_exporter.collector.netdev.address_info') do |address_info| %> \
      <% if address_info %> \
      --collector.netdev.address-info \
      <% end %> \
      <% end %> \
      <% if_p('node_exporter.collector.netdev.device_blacklist') do |device_blacklist| %> \
      --collector.netdev.device-blacklist="<%= device_blacklist %>" \
      <% end %> \
      <% if_p('node_exporter.collector.netdev.device_whitelist') do |device_whitelist| %> \
      --collector.netdev.device-whitelist="<%= device_whitelist %>" \
      <% end %> \
      <% if_p('node_exporter.collector.netstat.fields') do |fields| %> \
      --collector.netstat.fields="<%= fields %>" \
      <% end %> \
      <% if_p('node_exporter.collector.ntp.server') do |server| %> \
      --collector.ntp.server="<%= server %>" \
      <% end %> \
      <% if_p('node_exporter.collector.ntp.protocol_version') do |protocol_version| %> \
      --collector.ntp.protocol-version=<%= protocol_version %> \
      <% end %> \
      <% if p('node_exporter.collector.ntp.server_is_local') %> \
      --collector.ntp.server-is-local \
      <% end %> \
      <% if_p('node_exporter.collector.ntp.ip_ttl') do |ip_ttl| %> \
      --collector.ntp.ip-ttl="<%= ip_ttl %>" \
      <% end %> \
      <% if_p('node_exporter.collector.ntp.max_distance') do |max_distance| %> \
      --collector.ntp.max-distance="<%= max_distance %>" \
      <% end %> \
      <% if_p('node_exporter.collector.ntp.local_offset_tolerance') do |local_offset_tolerance| %> \
      --collector.ntp.local-offset-tolerance="<%= local_offset_tolerance %>" \
      <% end %> \
      <% if_p('node_exporter.path.procfs') do |procfs| %> \
      --path.procfs="<%= procfs %>" \
      <% end %> \
      <% if_p('node_exporter.path.sysfs') do |sysfs| %> \
      --path.sysfs="<%= sysfs %>" \
      <% end %> \
      <% if_p('node_exporter.path.rootfs') do |rootfs| %> \
      --path.rootfs="<%= rootfs %>" \
      <% end %> \
      <% if_p('node_exporter.collector.perf.cpus') do |cpus| %> \
      --collector.perf.cpus="<%= cpus %>" \
      <% end %> \
      <% if_p('node_exporter.collector.perf.tracepoint') do |tracepoint| %> \
      --collector.perf.tracepoint="<%= tracepoint %>" \
      <% end %> \
      <% if_p('node_exporter.collector.powersupply.ignored_supplies') do |ignored_supplies| %> \
      --collector.powersupply.ignored-supplies="<%= ignored_supplies %>" \
      <% end %> \
      <% if_p('node_exporter.collector.qdisc.fixtures') do |fixtures| %> \
      --collector.qdisc.fixtures="<%= fixtures %>" \
      <% end %> \
      <% if_p('node_exporter.collector.runit.service_dir') do |service_dir| %> \
      --collector.runit.servicedir="<%= service_dir %>" \
      <% end %> \
      --collector.supervisord.url="http://localhost:<%= p('node_exporter.web.port') %>/RPC2" \
      <% if_p('node_exporter.collector.systemd.unit_whitelist') do |unit_whitelist| %> \
      --collector.systemd.unit-whitelist="<%= unit_whitelist %>" \
      <% end %> \
      <% if_p('node_exporter.collector.systemd.unit_blacklist') do |unit_blacklist| %> \
      --collector.systemd.unit-blacklist="<%= unit_blacklist %>" \
      <% end %> \
      <% if p('node_exporter.collector.systemd.enable_task_metrics') %> \
      --collector.systemd.enable-task-metrics \
      <% end %> \
      <% if p('node_exporter.collector.systemd.enable_restarts_metrics') %> \
      --collector.systemd.enable-restarts-metrics \
      <% end %> \
      <% if p('node_exporter.collector.systemd.enable_start_time_metrics') %> \
      --collector.systemd.enable-start-time-metrics \
      <% end %> \
      --collector.textfile.directory=/var/vcap/jobs/node_exporter/config \
      <% if_p('node_exporter.collector.vmstat.fields') do |fields| %> \
      --collector.vmstat.fields="<%= fields %>" \
      <% end %> \
      <% if_p('node_exporter.collector.wifi.fixtures') do |fixtures| %> \
      --collector.wifi.fixtures="<%= fixtures %>" \
      <% end %> \
      <% collectors.each do |collector| %> \
      <% if_p("node_exporter.collector.#{collector}.enabled") do |enabled| %> \
       <%= enabled ? "--collector.#{collector}" : "--no-collector.#{collector}" %> \
      <% end %> \
      <% end %> \
      --web.listen-address=":<%= p('node_exporter.web.port') %>" \
      <% if_p('node_exporter.web.telemetry_path') do |telemetry_path| %> \
      --web.telemetry-path="<%= telemetry_path %>" \
      <% end %> \
      <% if p('node_exporter.web.disable_exporter_metrics') %> \
      --web.disable-exporter-metrics \
      <% end %> \
      <% if_p('node_exporter.web.max_requests') do |max_requests| %> \
      --web.max-requests="<%= max_requests %>" \
      <% end %> \
      <% if_p('node_exporter.log.level') do |level| %> \
      --log.level="<%= level %>" \
      <% end %> \
      <% if_p('node_exporter.log.format') do |format| %> \
      --log.format="<%= format %>" \
      <% end %> \
      <% if p('node_exporter.tls_server_config.enabled') %> \
       <%= "--web.config.file=/var/vcap/jobs/node_exporter/config/web-config.yml" %> \
      <% end %> \
      >>  ${LOG_DIR}/node_exporter.stdout.log \
      2>> ${LOG_DIR}/node_exporter.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
